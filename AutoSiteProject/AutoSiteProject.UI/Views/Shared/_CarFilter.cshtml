@using AutoSiteProject.Models.ViewModels
@using AutoSiteProject.UI.Helpers
@model CarAggregateFilterViewModel

<link href="~/Content/chosen.min.css" rel="stylesheet" />
<link href="~/Content/MyCss/WidthClasses.css" rel="stylesheet" />
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/scripts/chosen.jquery.min.js"></script>
<script src="~/scripts/select2.min.js"></script>
<script src="~/scripts/AutoSite/DataLoader.js"></script>
<script src="~/scripts/AutoSite/CarFilter.js"></script>

<div id="filterPanel">
    <div class="list-group panel">
        <a href="#filterForm" class="list-group-item list-group-item-success strong" data-toggle="collapse" data-parent="#filterPanel">Click to filter...<i class="fa fa-caret-down"></i></a>
        <div class="collapse" id="filterForm">
            <form class="form-inline width100">
                <div class="filter-section width100"
                     data-cars-url="@Url.Action("GetCars", "DataLoader")"
                     data-countries-url="@Url.Action("GetCountries", "DataLoader")"
                     data-manufacturers-url="@Url.Action("GetManufacturersOfCountry", "DataLoader")"
                     data-carmodels-url="@Url.Action("GetCarModelsOfManufacturer", "DataLoader")"
                     data-carbodytype-url="@Url.Action("GetBodyTypes", "DataLoader")"
                     data-carfueltype-url="@Url.Action("GetFuelTypes", "DataLoader")"
                     data-cartransmitiontype-url="@Url.Action("GetTransmitionTypes", "DataLoader")"
                     data-caroptions-url="@Url.Action("GetCarOptions", "DataLoader")">

                    <div class="form-group width100">
                        <div class="col-sm-2 width100 search-control">
                            @Html.Select2Search(new { @class = "select2Search" })
                        </div>
                    </div>
                    <div class="form-group width100">
                        @Html.LabelFor(m => m.AllFieldsSearch, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-2 width100">
                            @Html.SearchFor(m => m.AllFieldsSearch, htmlAttributes: new { @class = "form-control allFields-picker width100" })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.CountryId, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-10 width100">
                            @Html.DropDownListFor(m => m.CountryId, new SelectList(new List<CountryViewModel>(), "Id", "Name", Model.CountryId), "Select country", htmlAttributes: new { @class = "form-control country-picker width100", @data_initId = @Model.CountryId })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.ManufacturerId, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-10 width100">
                            @Html.DropDownListFor(m => m.ManufacturerId, new SelectList(new List<ManufacturerViewModel>(), "Id", "Name", Model.ManufacturerId), "Select manufacturer", htmlAttributes: new { @class = "form-control manufacturer-picker width100", @data_initId = @Model.ManufacturerId })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.ModelId, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-10 width100">
                            @Html.DropDownListFor(m => m.ModelId, new SelectList(new List<CarModelViewModel>(), "Id", "Name", Model.ModelId), "Select car model", htmlAttributes: new { @class = "form-control carmodel-picker width100", @data_initId = @Model.ModelId })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.BodyTypeId, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-10 width100">
                            @Html.DropDownListFor(m => m.BodyTypeId, new SelectList(new List<CarBodyTypeViewModel>(), "Id", "Name", Model.BodyTypeId), "Select car body type", htmlAttributes: new { @class = "form-control carbodytype-picker width100", @data_initId = @Model.BodyTypeId })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.FuelTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 width100">
                            @Html.DropDownListFor(m => m.FuelTypeId, new SelectList(new List<FuelTypeViewModel>(), "Id", "Name", Model.FuelTypeId), "Select car fuel type", htmlAttributes: new { @class = "form-control carfueltype-picker", @data_initId = @Model.FuelTypeId })
                            @Html.ValidationMessageFor(model => model.FuelTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.TransmitionTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 width100">
                            @Html.DropDownListFor(m => m.TransmitionTypeId, new SelectList(new List<TransmitionTypeViewModel>(), "Id", "Name", Model.TransmitionTypeId), "Select car transmition type", htmlAttributes: new { @class = "form-control cartransmitiontype-picker", @data_initId = @Model.TransmitionTypeId })
                            @Html.ValidationMessageFor(model => model.TransmitionTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.OptionsIds, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-10 width100">
                            @Html.ListBoxFor(m => m.OptionsIds, new SelectList(Model.AvalibleCarOptions, "Id", "Name"), htmlAttributes: new { @class = "form-control caroptions-picker width100" })
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.ReleaseYearMin, "Release year:"+Model.ReleaseYearMin+"-"+Model.ReleaseYearMax,htmlAttributes: new { @class = "control-label col-md-2 releaseyear-label width100" })
                        <div class="col-md-10 widht100">
                            @Html.HiddenFor(m => m.ReleaseYearMin)
                            @Html.HiddenFor(m => m.ReleaseYearMax)
                            @Html.ValidationMessageFor(model => model.ReleaseYearMin, "", new {@class = "text-danger"})
                            @Html.ValidationMessageFor(model => model.ReleaseYearMax, "", new {@class = "text-danger"})
                            <div class="releaseyear-range-slider width100">
                            </div>
                        </div>
                    </div>

                    <div class="form-group width33">
                        @Html.LabelFor(m => m.VolumeMin,"Engine volume:"+Model.VolumeMin+"-"+Model.VolumeMax, htmlAttributes: new { @class = "control-label col-md-2 volume-label width100" })
                        <div class="col-md-10 width100">
                            @Html.HiddenFor(m => m.VolumeMin)
                            @Html.HiddenFor(m => m.VolumeMax)
                            @Html.ValidationMessageFor(model => model.VolumeMin, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.VolumeMax, "", new { @class = "text-danger" })
                            <div class="volume-range-slider">

                            </div>
                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.PriceMin,"Price:"+Model.PriceMin+"-"+Model.PriceMax, htmlAttributes: new { @class = "control-label col-md-2 price-label width100" })
                        <div class="col-md-10 width100">
                            @Html.HiddenFor(m => m.PriceMin)
                            @Html.HiddenFor(m => m.PriceMax)
                            @Html.ValidationMessageFor(model => model.PriceMin, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PriceMax, "", new { @class = "text-danger" })
                            <div class="price-range-slider">

                            </div>

                        </div>
                    </div>
                    <div class="form-group width33">
                        @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-sm-4" })
                        <div class="col-sm-10 width100">
                            @Html.TextBoxFor(m => m.Description, htmlAttributes: new { @class = "form-control description-picker width100" })
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
