@model AutoSiteProject.Models.ViewModels.CarItemViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<script src="~/scripts/AutoSite/ImageLoader.js"></script>

@using (Html.BeginForm("Edit", "CarItem", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CarItemViewModel</h4>
        @{ Html.RenderPartial("_CarItem", Model);}
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="images-container">
                    @if (Model.Images != null)
                    {
                        for (var i = 0; i < Model.Images.Count; i++)
                        {
                            <div class="image-block" id="@Model.Images[i].Id">
                                @Html.HiddenFor(model => model.Images[i].Id, htmlAttributes: new { @class = "existImageIdField", @id = @Model.Images[i].Id })
                                <img src=@Url.Action("LoadImg", "DataLoader", new {id = @Model.Images[i].Id}) width="150" />
                                <input type="button" name="Delete" class="existImageDeleteButton" value="Delete" id="@Model.Images[i].Id" />
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="add-image">
                    <input type="file" name="files" />
                </div>
            </div>
        </div>
        @*@Html.DevExpress().ImageSlider(
            settings =>
            {
                settings.Name = "imageSlider";
                settings.EnableTheming = false;

                settings.SettingsAutoGeneratedImages.ImageCacheFolder = "~\\Content\\ImageSlider\\Thumb";
                settings.ImageContentBytesField = "Data";
                settings.TextField = "Name";
                settings.SettingsNavigationBar.ThumbnailsModeNavigationButtonVisibility = ElementVisibilityMode.None;
            }
            ).Bind(Model.Images).GetHtml()*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("Back to List", "List")
</div>




